worker_processes auto;
events {
    worker_connections  512;
}
http {
    include       mime.types;
    default_type  application/octet-stream;

    lua_shared_dict prometheus_metrics 10M;
    lua_package_path "/etc/nginx/nginx-lua-prometheus/?.lua;;";
    
    init_by_lua_block {
        prometheus = require("prometheus").init("prometheus_metrics")
        metric_requests = prometheus:counter("requests_total",
            "Number of HTTP requests", {"host", "status"})
        metric_latency = prometheus:histogram("request_duration_seconds",
            "HTTP request latency", {"host"},
            {0.005, 0.006, 0.007, 0.008, 0.009, 
            0.01, 0.015, 0.02, 0.025, 0.030, 0.035, 0.040, 0.1, 0.2, 0.3, 
            0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 10})
        metric_connections = prometheus:gauge("connections",
            "Number of HTTP connections", {"state"})
    }
    
    init_worker_by_lua_block { prometheus:init_worker(0.4) }
    log_by_lua_block {
        metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
        metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
    }

    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        off;
    #tcp_nopush     on;

    keepalive_timeout  0;
    # keepalive_timeout  65;
    
    # include /etc/nginx/conf.d/*.conf;
    server {
        listen 9145;
        location /metrics {
            content_by_lua_block {
                metric_connections:set(ngx.var.connections_reading, {"reading"})
                metric_connections:set(ngx.var.connections_waiting, {"waiting"})
                metric_connections:set(ngx.var.connections_writing, {"writing"})
                prometheus:collect()
            }
        }
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        
        # Set nginx to serve files from the shared volume!
        root /var/www/html;
        server_name znn;
        location / {
            try_files $uri $uri/ =404;
        }
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass 127.0.0.1:9000;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            sendfile off;
            add_header Last-Modified $date_gmt;
            if_modified_since off;
            expires off;
            etag off;
            proxy_no_cache 1;
            proxy_cache_bypass 1; 
        }
    }
}
